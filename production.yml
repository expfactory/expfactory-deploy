version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: expfactory_deploy_production_django
    depends_on:
      - postgres
    volumes:
      - .:/app:z
      - ./expfactory_deploy_local/src/expfactory_deploy_local/static/:/app/deployment_assets/non_repo_files/default/static/:rw
      - ${EXPFACTORY_EXPERIMENTS_PATH:-./deployment_assets/repos/expfactory-experiments}:/app/deployment_assets/repos/expfactory-experiments:ro
      - ${EXPFACTORY_EXPERIMENTS_PATH:-./deployment_assets/repos/expfactory-experiments}:/app/deployment_assets/non_repo_files/default/static/experiments/:ro

    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: expfactory_deploy_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres

  nginx:
    restart: always
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./compose/production/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - .:/app:z
      - ./expfactory_deploy_local/src/expfactory_deploy_local/static/:/app/deployment_assets/non_repo_files/default/static/:rw
      - ${EXPFACTORY_EXPERIMENTS_PATH:-./deployment_assets/repos/expfactory-experiments}:/app/deployment_assets/non_repo_files/default/static/experiments/:ro
      - ./.certs/well-known/acme-challenge:/var/www/challenges/:rw
      - ./.certs/:/etc/ssl/.certs:ro
    depends_on:
      - django

  q2worker:
    <<: *django
    image: expfactory_deploy_production_q2_worker
    container_name: q2worker
    depends_on:
      - postgres
    ports: []
    command: /start_django_q2


#  traefik:
#    build:
#      context: .
#      dockerfile: ./compose/production/traefik/Dockerfile
#    image: expfactory_deploy_production_traefik
#    depends_on:
#      - django
#    volumes:
#      - production_traefik:/etc/traefik/acme:z
#    ports:
#      - "0.0.0.0:80:80"
#      - "0.0.0.0:443:443"
#      - "0.0.0.0:5555:5555"
#
#  redis:
#    image: redis:5.0
#
#  celeryworker:
#    <<: *django
#    image: expfactory_deploy_production_celeryworker
#    command: /start-celeryworker
#
#  celerybeat:
#    <<: *django
#    image: expfactory_deploy_production_celerybeat
#    command: /start-celerybeat
#
#  flower:
#    <<: *django
#    image: expfactory_deploy_production_flower
#    command: /start-flower
#
#
#  awscli:
#    build:
#      context: .
#      dockerfile: ./compose/production/aws/Dockerfile
#    env_file:
#      - ./.envs/.production/.django
#    volumes:
#      - production_postgres_data_backups:/backups:z
